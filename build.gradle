buildscript {
	ext {
		springBootVersion = '1.4.1.RELEASE'
	}
	repositories {
		jcenter()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath 'org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:2.1'
	}
}

apply plugin: 'java'
apply plugin: 'org.sonarqube'
apply plugin: 'jacoco'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'spring-boot'

group = 'de.cronn'

if (System.env.BUILD_NUMBER) {
	version = "1.0-SNAPSHOT-b" + System.env.BUILD_NUMBER
} else {
	version = "1.0"
}

jacoco {
	toolVersion = "0.7.7.201606060606"
}

springBoot {
	executable = true
}

bootRun {
	systemProperties = System.properties
}

eclipse.classpath {
	downloadSources = true
}

idea.module {
	downloadJavadoc = true
	downloadSources = true
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
	repositories {
		jcenter()
	}
}

dependencies {
	compile('org.springframework.boot:spring-boot-starter')
	compile('org.springframework.boot:spring-boot-starter-cache')

	compile 'org.apache.httpcomponents:httpclient:4.5.2'
	compile 'org.apache.commons:commons-lang3:3.4'

	compile("org.springframework:spring-web")
	compile("com.fasterxml.jackson.core:jackson-databind")

	compile "de.cronn:ssh-proxy:1.0"

	testCompile("org.mockito:mockito-core:1.10.19")
	testCompile("nl.jqno.equalsverifier:equalsverifier:2.1.6")
	testCompile('org.springframework.boot:spring-boot-starter-test')
	testCompile("org.springframework.boot:spring-boot-starter-web")
}

task wrapper(type: Wrapper) {
	description = "Generates gradlew[.bat] scripts"
	gradleVersion = "3.1"
	distributionUrl = "https://services.gradle.org/distributions/gradle-${gradleVersion}-all.zip"
}
